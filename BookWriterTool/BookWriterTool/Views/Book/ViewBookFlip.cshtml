@model book

@{

    Layout = "~/Views/Shared/_LayoutView.cshtml";
    ViewBag.Title = "Editor";
    var activeDirectory = "";

    if (Session["ActualDirectory"] != null)
    {
        activeDirectory = (string)this.Session["ActualDirectory"];
    }
    var backgroundImg = activeDirectory + "/" + @ViewBag.fileName + ".jpg";
}
<div>@Html.ActionLink("Back to book index", "GetListOfBooks")</div>
<div id="flipbook">
    @{
        foreach (bookChapter chapter in Model.chapters)
        {
            foreach (var page in chapter.pages)
            {
                var frameYPosition = 0;
                var frameHeight = 200;
                <div>
                    @foreach (var frame in page.frames)
                    {
                        switch (@frame.bordertype)
                        {
                            case "rectangle":

                                <div style="top: @(frameYPosition)px;" id="@chapter.id-@page.id-@frame.id-rectangle" class="rectangle">
                                    @Html.Partial("FrameContentFullView", (bookChapterPageFrame)this.ViewBag.Table, new ViewDataDictionary { { "actualFrame", frame }, { "target", "rectangle" } })
                                </div>
                                frameYPosition=frameYPosition + frameHeight;
                                break;
                            case "square":

                            <div style="top:@(frameYPosition)px;" ignore="1" id="@chapter.id-@page.id-@frame.id-left" class="squareLeft">
                                @Html.Partial("FrameContentSplitView", (bookChapterPageFrame)this.ViewBag.Table, new ViewDataDictionary { { "actualFrame", frame }, { "target", "left" } })
                            </div>
                                <div style="left:50%;top:@(frameYPosition)px;" ignore="1" id="@chapter.id-@page.id-@frame.id-right" class="squareRight">
                                  @Html.Partial("FrameContentSplitView", (bookChapterPageFrame)this.ViewBag.Table, new ViewDataDictionary { { "actualFrame", frame }, { "target", "right" } })
                                </div>
                                frameYPosition = frameYPosition + frameHeight;
                                break;
                        }
                    }
                </div>
            }
        }}
</div>
@section scripts
    {

    <script type="text/javascript">
        $(document).ready(function () {
            $(init);
       
        });
        function init() {
            $("#flipbook").turn({
                width: 800,
                height:600,
                display: "single",
                when: {
                    turned: function (event, page, pageObj) {
                        console.log("the current page is " + page);
                    }
                }
            });
        }

  
    </script>
}
