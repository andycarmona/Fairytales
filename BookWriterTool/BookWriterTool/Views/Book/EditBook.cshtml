@using BookWriterTool.Helpers
@model book
@{
    
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewBag.Title = "Editor";
    string statusMsg;
    if (ViewBag.statusMsg != null)
    {
        statusMsg = ViewBag.statusMsg;
    }
    else
    {
        statusMsg = "No message";
    }
    int index = 1;
    int chapterIndex = 1;
    int pageIndex = 1;
    var listOfBooks = new string[1];
    listOfBooks[0] = "no book";
}
@if (Model != null)
{
    <div class="chapters" id="chapters">

        <ul>
            @foreach (bookChapter chapter in @Model.chapters)
            {
                <li><a href="#@chapter.id">@Localization.Localize("chapter")@(chapterIndex++)</a></li>
            }
        </ul>
        <!--Chapters section-->
        @for (int indexChapters = 0; indexChapters < @Model.chapters.Length; indexChapters++)
        {

            <!--Pages section-->
            <div class="pages" id="@Model.chapters[indexChapters].id">

                <ul>
                    @foreach (bookChapterPage page in @Model.chapters[indexChapters].pages)
                    {
                        <li><a href="#@page.id">@Localization.Localize("page")@(pageIndex++)</a></li>
                    
                    }
                    <li>@{ pageIndex = 1; }
                        <button id="btnAddPage" type="button" value="+">+</button></li>
                </ul>
                <!--End Pages section-->

                <!--Frames section-->
                @for (int indexPages = 0; indexPages < @Model.chapters[indexChapters].pages.Length; indexPages++)
                {
                    <div class="page" id="@Model.chapters[indexChapters].pages[indexPages].id">

                        <div class="frame" id="frames">
                            @foreach (bookChapterPageFrame frame in @Model.chapters[indexChapters].pages[indexPages].frames)
                            {
                                <div id="FrameEdit">
                                    <div id="@frame.id" class="droppable">
                                        <img id="img@(frame.id)" border="0" width="700" height="158" alt="" src="~/Images/@(frame.bordertype).png" />
                                        <span>@(frame.bordertype)</span>
                                    </div>

                                </div>
                                <div style="visibility: hidden;" id="ContentEdit">
                                </div>
                            }  @{ index++; }
                        </div>
                    </div>
                }
                <!--End frames section-->

            </div>
        }
    </div>
}

<div class="configDialog" id="configDialog">
    <div id="accordionConfig" class="toolbox">
        <h3>@Localization.Localize("files")</h3>
        <div class="leftContent">
            <label>@Localization.Localize("ChooseOption")</label>
            <select class="selectpicker" id="selectpicker">
                <option value="newBook">@Localization.Localize("NewBook")</option>
                <option value="loadBook">@Localization.Localize("LoadABook")</option>
            </select>
            <div id="partialFileResult">
                @{
                    this.Html.RenderPartial("~/Views/Book/ListOfBooks.cshtml", @listOfBooks);
                }
            </div>
        </div>
        <h3>Status</h3>
        <div class="leftContent">
            <label>Status</label>
            <textarea id="status" style="width: 150px" cols="20" rows="10"></textarea>
        </div>
        <h3>@Localization.Localize("Languages")</h3>
        <div class="leftContent">
            <ul>
                <li>@Html.ActionLink(@Localization.Localize("English"), "SetCulture", new { controller = "Culture", culture = "en-GB", returnUrl = HttpContext.Current.Request.RawUrl }, new { Class = "btn btn-lg btn-primary" })</li>
                <li>@Html.ActionLink(@Localization.Localize("Spanish"), "SetCulture", new { controller = "Culture", culture = "es-ES", returnUrl = HttpContext.Current.Request.RawUrl }, new { Class = "btn btn-lg btn-primary" })</li>
                <li>@Html.ActionLink(@Localization.Localize("Swedish"), "SetCulture", new { controller = "Culture", culture = "sv-SE", returnUrl = HttpContext.Current.Request.RawUrl }, new { Class = "btn btn-lg btn-primary" })</li>
            </ul>
        </div>
    </div>
</div>
}
<div id="statusMsg">@statusMsg</div>
<div class="configStatus" id="configStatus">
    <div id="accordionStatus" class="toolbox">
        <h3>Frames</h3>
        <div class="leftContent">

            @Html.Partial("~/Views/Book/FrameList.cshtml")

        </div>
        <h3>@Localization.Localize("objects")</h3>
        <div class="leftContent">

            @Html.Partial("~/Views/Book/ObjectList.cshtml")

        </div>
        <h3>@Localization.Localize("backgrounds")</h3>
        <div class="leftContent">

            @Html.Partial("~/Views/Book/ObjectList.cshtml")

        </div>
    </div>
</div>


@section scripts
{
    <script>
        var draggableId = "No Draggable";
        var droppableId = "No droppable";
        var startPos;
        var textArea = "";
        var actualPage = 1;

        var framesContent = $('div#frames');
        var dialogOpts = {
            position: [5, 110]
        };
        $(function () {
            $("#pages").tabs();
            $("#chapters").tabs();
            $("#chapter1").tabs();
            $("#chapter2").tabs();
            //  $("#configDialog").dialog(dialogOpts);
            $("#accordionConfig").accordion();
            $("#accordionStatus").accordion();
            $('#userContent').load('/Book/GetAvailableBooks', { fileOption: "newBook" });
        });
        $(".selectpicker").change(function () {

            $('#userContent').load('/Book/GetAvailableBooks', { fileOption: $(this).val() });

        });


        function AddTextToStatus(mssg) {
            $("#status").val($("#status").val() + mssg + "\n");
        }

        $("#accordion").accordion({
            active: 0,
            change: function (event, ui) {
                var activeIndex = $("#accordion").accordion("option", "active");

                switch (activeIndex) {
                    case 0:
                        // $('#chapter2').show();
                        // $('#chapter1').show();
                        break;
                    case 1:
                        // $("#ContentEdit").show();
                        // $('#chapter2').hide();
                        // $('#chapter1').hide();
                        break;
                    default:
                }

            }
        });
        /*Function handle draggable objects. 
                 Objects you pickup and drag*/

        $(function () {
            $(".draggable").draggable({
                cursor: 'move',
                helper: 'clone',
                drag: function (event, ui) {
                    draggableId = $(this).attr("id");

                }
            }).addClass("ui-state-highlight");

            function myHelper(event) {

                return '<img id="cuadratric" alt="" class="draggable" src="~/Images/cuadratric.png" border="1" width="150" height="137" title="MainContent" />';
            }

            /*Function handle droppable objects. 
                          Object where you put your draggable*/
            $(".droppable").droppable({
                drop: function (event, ui) {
                    var pageIdAtributte = $(this).parent().parent().parent().attr("id");
                    var descriptionArray = [];
                    droppableId = $(this).attr("id");
                   // actualPage = pageIdAtributte.substring(pageIdAtributte.length - 1);

                    //Add frames in page
                    $(this).each(function (i, elem) {
                       // var spanText = $(elem).find("span").text();
                        var frameId = $(elem).attr("id");
                       /* AddTextToStatus("PageId " + pageIdAtributte);
                        AddTextToStatus("dropable " + draggableId);
                        AddTextToStatus("dragable " + spanText);
                        AddTextToStatus("frameId " + frameId);*/
                        descriptionArray.push(pageIdAtributte + "-" + frameId + "-" + draggableId);
                    });
                    if (droppableId != draggableId) {
                        PostArray("AddContentToFrame", descriptionArray);
                    }
                    var temp = $(this).attr("id").substring(0, 5);

                    if (temp === "frame") {
                        $(this).find("img").attr("src", "../Images/" + draggableId + ".png");
                    } else {

                    }
                    $("#" + draggableId).css({ position: "relative", top: 0, left: 0 });
                    $("#" + draggableId).show();
                }
            }).addClass("ui-state-highlight");
        });
        /*All post data to controller go thorugh this function*/

        function PostArray(url, descriptionArray) {
            jQuery.ajax({
                type: 'POST',
                url: url,
                contentType: "application/json; charset=utf-8",
                data: JSON.stringify(descriptionArray),
                async: false,
                dataType: "json",
                success: function (statusMsg) {

                    descriptionArray.length = 0;
                },
                error: function (statusMsg) {
                    AddTextToStatus("Couldn't send message.Wrong parameters");
                }
            });
        }

        $("#btnAddPage").click(function () {
            var descriptionArray = [];
            descriptionArray.push("chapter1");
            AddTextToStatus(descriptionArray[0]);
            PostArray("AddPage", descriptionArray);
            //Reload tab control
           // $('#chapters').tabs('load', 0);
        });

        $("#btnAddChapter").click(function () {
            //  var id = this.value;


        }
        );

    </script>
}
