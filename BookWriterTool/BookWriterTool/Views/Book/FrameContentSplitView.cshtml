@using BookWriterTool.Helpers
@{ var frame = (bookChapterPageFrame)this.ViewData["actualFrame"];
   var target = (string)this.ViewData["target"];
   var activeDirectory = "";
   if (Session["ActualDirectory"] != null)
   {
       activeDirectory = (string)this.Session["ActualDirectory"];
   }
}
@if (frame.contents != null)
{
    foreach (bookChapterPageFrameContent content in frame.contents.Where(content => content.target == target))
    { 
    <div class="droppable contentIntern" style="background-image: url(@(!String.IsNullOrEmpty(content.background) ? @activeDirectory+"/Generic/"+ @content.background : @GlobalVariables.ConfigResource("Images")+"rectangle.png"))">
        @if (content.objects != null)
            {
            foreach (bookChapterPageFrameContentObject obj in content.objects)
            {
                 switch (@obj.type)
                    {
                        case "textBox":
                            <p id="@obj.id" class='bigText' contenteditable='true'>@this.Html.Raw(@obj.text.Replace("\n", "<br/>"))</p>
                            break;
                        case "speechBubble":
                              
                            <div style="position:absolute;left: @obj.origoX; top: @obj.origoY;" width="@obj.scaleX" height="@obj.scaleY" id="@obj.id"  class="speechContainer">
                                <p> @this.Html.Raw(@obj.text != null ? @obj.text.Replace("\n", "<br/>"):" ")</p>
                                    <br />
                            </div>
                            break;
                        default:
                       <img id="@obj.id" style="position:absolute;left: @obj.origoX; top: @obj.origoY;" class="clonedImg" width="@obj.scaleX" height="@obj.scaleY" alt="" src="@activeDirectory@GlobalVariables.ConfigResource(@obj.type)@obj.img" />
                            break;
                    }

            }
        }

    </div>
    }
}